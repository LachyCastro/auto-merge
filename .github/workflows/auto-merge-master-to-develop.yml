name: Sync main → develop after PR merge or direct push

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ Configure Git
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3️⃣ Decide if we should run merge
      - name: Determine if merge should run
        id: check_merge
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "run_merge=true" >> $GITHUB_OUTPUT
          elif [ "${GITHUB_EVENT_NAME}" = "pull_request" ] && [ "${{ github.event.pull_request.merged }}" = "true" ] && [[ "${{ github.event.pull_request.head.ref }}" == hotfix/* ]]; then
            echo "run_merge=true" >> $GITHUB_OUTPUT
          else
            echo "run_merge=false" >> $GITHUB_OUTPUT
          fi

      # 4️⃣ Fetch develop branch
      - name: Fetch develop branch
        if: steps.check_merge.outputs.run_merge == 'true'
        run: git fetch origin develop:develop

      # 5️⃣ Merge main into develop
      - name: Merge main into develop
        if: steps.check_merge.outputs.run_merge == 'true'
        run: |
          git checkout develop
          set +e
          git merge origin/main --no-commit --no-ff
          MERGE_STATUS=$?
          set -e
          if [ $MERGE_STATUS -ne 0 ]; then
            echo "❌ Conflictos detectados. Debes hacer el merge manualmente."
            git merge --abort || true
            exit 1
          fi
          git commit -m "chore: merge main → develop [automated]"
          git push origin develop
